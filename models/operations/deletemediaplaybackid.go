// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/FastPix/fastpix-go/models/components"
)

type DeleteMediaPlaybackIDRequest struct {
	// Return the universal unique identifier for media which can contain a maximum of 255 characters.
	MediaID string `pathParam:"style=simple,explode=false,name=mediaId"`
	// Return the universal unique identifier for playbacks  which can contain a maximum of 255 characters.
	PlaybackID string `queryParam:"style=form,explode=true,name=playbackId"`
}

func (o *DeleteMediaPlaybackIDRequest) GetMediaID() string {
	if o == nil {
		return ""
	}
	return o.MediaID
}

func (o *DeleteMediaPlaybackIDRequest) GetPlaybackID() string {
	if o == nil {
		return ""
	}
	return o.PlaybackID
}

// DeleteMediaPlaybackIDResponseBody - Deleted a Playback Id successfully
type DeleteMediaPlaybackIDResponseBody struct {
	// Demonstrates whether the request is successful or not.
	Success *bool `json:"success,omitempty"`
}

func (o *DeleteMediaPlaybackIDResponseBody) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

type DeleteMediaPlaybackIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Deleted a Playback Id successfully
	Object *DeleteMediaPlaybackIDResponseBody
}

func (o *DeleteMediaPlaybackIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteMediaPlaybackIDResponse) GetObject() *DeleteMediaPlaybackIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
