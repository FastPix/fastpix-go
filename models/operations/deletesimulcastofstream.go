// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/FastPix/fastpix-go/models/components"
)

type DeleteSimulcastOfStreamRequest struct {
	// Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
	StreamID string `pathParam:"style=simple,explode=false,name=streamId"`
	// When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
	SimulcastID string `pathParam:"style=simple,explode=false,name=simulcastId"`
}

func (o *DeleteSimulcastOfStreamRequest) GetStreamID() string {
	if o == nil {
		return ""
	}
	return o.StreamID
}

func (o *DeleteSimulcastOfStreamRequest) GetSimulcastID() string {
	if o == nil {
		return ""
	}
	return o.SimulcastID
}

type DeleteSimulcastOfStreamResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Stream's simulcast deleted successfully
	SimulcastdeleteResponse *components.SimulcastdeleteResponse
}

func (o *DeleteSimulcastOfStreamResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteSimulcastOfStreamResponse) GetSimulcastdeleteResponse() *components.SimulcastdeleteResponse {
	if o == nil {
		return nil
	}
	return o.SimulcastdeleteResponse
}
