// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/FastPix/fastpix-go/models/components"
)

type CreateSimulcastOfStreamRequest struct {
	// Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
	StreamID         string                       `pathParam:"style=simple,explode=false,name=streamId"`
	SimulcastRequest *components.SimulcastRequest `request:"mediaType=application/json"`
}

func (o *CreateSimulcastOfStreamRequest) GetStreamID() string {
	if o == nil {
		return ""
	}
	return o.StreamID
}

func (o *CreateSimulcastOfStreamRequest) GetSimulcastRequest() *components.SimulcastRequest {
	if o == nil {
		return nil
	}
	return o.SimulcastRequest
}

type CreateSimulcastOfStreamResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// New Simulcast created successfully
	SimulcastResponse *components.SimulcastResponse
}

func (o *CreateSimulcastOfStreamResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSimulcastOfStreamResponse) GetSimulcastResponse() *components.SimulcastResponse {
	if o == nil {
		return nil
	}
	return o.SimulcastResponse
}
