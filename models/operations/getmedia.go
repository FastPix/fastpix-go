// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/FastPix/fastpix-go/models/components"
)

type GetMediaRequest struct {
	// The Media Id is assigned a universal unique identifier, which can contain a maximum of 255 characters.
	MediaID string `pathParam:"style=simple,explode=false,name=mediaId"`
}

func (o *GetMediaRequest) GetMediaID() string {
	if o == nil {
		return ""
	}
	return o.MediaID
}

// GetMediaResponseBody - Get a video media by id
type GetMediaResponseBody struct {
	// Demonstrates whether the request is successful or not.
	Success *bool             `json:"success,omitempty"`
	Data    *components.Media `json:"data,omitempty"`
}

func (o *GetMediaResponseBody) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

func (o *GetMediaResponseBody) GetData() *components.Media {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetMediaResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Get a video media by id
	Object *GetMediaResponseBody
}

func (o *GetMediaResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetMediaResponse) GetObject() *GetMediaResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
